<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actualizar" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="Ayuda" xml:space="preserve">
    <value>Ayuda</value>
  </data>
  <data name="Cambiar Idioma" xml:space="preserve">
    <value>Cambiar Idioma</value>
  </data>
  <data name="Cantidad de productos dañada " xml:space="preserve">
    <value>Cantidad de productos dañada </value>
  </data>
  <data name="Cerrar Sesion " xml:space="preserve">
    <value>Cerrar Sesion </value>
  </data>
  <data name="Columna" xml:space="preserve">
    <value>Columna</value>
  </data>
  <data name="Costo de mano de obra" xml:space="preserve">
    <value>Costo de mano de obra</value>
  </data>
  <data name="Costo de mano de obra1" xml:space="preserve">
    <value>Costo de mano de obra</value>
  </data>
  <data name="Costo de perdida de materia prima" xml:space="preserve">
    <value>Costo de perdida de materia prima</value>
  </data>
  <data name="Costo producto " xml:space="preserve">
    <value>Costo producto </value>
  </data>
  <data name="Código producto " xml:space="preserve">
    <value>Código producto </value>
  </data>
  <data name="Datos del Producto " xml:space="preserve">
    <value>Datos del Producto </value>
  </data>
  <data name="Deposito almacenado" xml:space="preserve">
    <value>Deposito almacenado</value>
  </data>
  <data name="Estado del producto" xml:space="preserve">
    <value>Estado del producto</value>
  </data>
  <data name="Estado del producto " xml:space="preserve">
    <value>Estado del producto </value>
  </data>
  <data name="Estante" xml:space="preserve">
    <value>Estante</value>
  </data>
  <data name="Finalizar formulario " xml:space="preserve">
    <value>Finalizar formulario </value>
  </data>
  <data name="Gasto generado (antes de ser defectuoso) " xml:space="preserve">
    <value>Gasto generado (antes de ser defectuoso) </value>
  </data>
  <data name="Guardar" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="Modificar Productos" xml:space="preserve">
    <value>Modificar Productos</value>
  </data>
  <data name="Nivel de estante" xml:space="preserve">
    <value>nivel de estante</value>
  </data>
  <data name="Nombre producto " xml:space="preserve">
    <value>Nombre producto </value>
  </data>
  <data name="Problema por el que llega " xml:space="preserve">
    <value>Problema por el que llega </value>
  </data>
  <data name="Registrar" xml:space="preserve">
    <value>Registrar</value>
  </data>
  <data name="Reporte" xml:space="preserve">
    <value>Reporte</value>
  </data>
  <data name="Seguimiento" xml:space="preserve">
    <value>Seguimiento</value>
  </data>
  <data name="Ubicación Geográfica " xml:space="preserve">
    <value>Ubicación Geográfica </value>
  </data>
  <data name="Ubicación Geográfica" xml:space="preserve">
    <value>Ubicación Geográfica </value>
  </data>
  <data name="Paso al seguimiento" xml:space="preserve">
    <value>Paso al seguimiento</value>
  </data>
  <data name="Modificar" xml:space="preserve">
    <value>Modificar</value>
  </data>
  <data name="Borrar" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="informacion producto" xml:space="preserve">
    <value>informacion producto</value>
  </data>
  <data name="codigo producto" xml:space="preserve">
    <value>codigo producto</value>
  </data>
  <data name="nombre producto" xml:space="preserve">
    <value>nombre producto</value>
  </data>
  <data name="problema de entrada" xml:space="preserve">
    <value>problema de entrada</value>
  </data>
  <data name="persona responsable" xml:space="preserve">
    <value>persona responsable</value>
  </data>
  <data name="Reportes por responsable" xml:space="preserve">
    <value>Reportes por responsable</value>
  </data>
  <data name="Reportes por ubicacion geografica" xml:space="preserve">
    <value>Reportes por ubicacion geografica</value>
  </data>
  <data name="Reportes financieros" xml:space="preserve">
    <value>Reportes financieros</value>
  </data>
  <data name="Agregar" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="Terminar Carga" xml:space="preserve">
    <value>Terminar Carga</value>
  </data>
  <data name="Gasto adicional" xml:space="preserve">
    <value>Gasto adicional</value>
  </data>
</root>